android.content.pm.IPackageDataObserver -> android.a.a.a:
    void onRemoveCompleted(java.lang.String,boolean) -> a
android.content.pm.IPackageDataObserver$Stub -> android.a.a.b:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.content.pm.IPackageStatsObserver -> android.a.a.c:
    void onGetStatsCompleted(android.content.pm.PackageStats,boolean) -> a
android.content.pm.IPackageStatsObserver$Stub -> android.a.a.d:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.android.internal.telephony.ITelephony -> com.a.a.a.a:
    void dial(java.lang.String) -> a
    void call(java.lang.String) -> b
    boolean showCallScreen() -> a
    boolean showCallScreenWithDialpad(boolean) -> a
    boolean endCall() -> b
    void answerRingingCall() -> c
    void silenceRinger() -> d
    boolean isOffhook() -> e
    boolean isRinging() -> f
    boolean isIdle() -> g
    boolean isRadioOn() -> h
    boolean isSimPinEnabled() -> i
    void cancelMissedCallsNotification() -> j
    boolean supplyPin(java.lang.String) -> c
    boolean handlePinMmi(java.lang.String) -> d
    void toggleRadioOnOff() -> k
    boolean setRadio(boolean) -> b
    void updateServiceLocation() -> l
    void enableLocationUpdates() -> m
    void disableLocationUpdates() -> n
    int enableApnType(java.lang.String) -> e
    int disableApnType(java.lang.String) -> f
    boolean enableDataConnectivity() -> o
    boolean disableDataConnectivity() -> p
    boolean isDataConnectivityPossible() -> q
    android.os.Bundle getCellLocation() -> r
    java.util.List getNeighboringCellInfo() -> s
    int getCallState() -> t
    int getDataActivity() -> u
    int getDataState() -> v
    int getActivePhoneType() -> w
    int getCdmaEriIconIndex() -> x
    int getCdmaEriIconMode() -> y
    java.lang.String getCdmaEriText() -> z
    boolean getCdmaNeedsProvisioning() -> A
    int getVoiceMessageCount() -> B
    int getNetworkType() -> C
    boolean hasIccCard() -> D
com.android.internal.telephony.ITelephony$Stub -> com.a.a.a.b:
    com.android.internal.telephony.ITelephony asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.internal.telephony.ITelephony$Stub$Proxy -> com.a.a.a.c:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void dial(java.lang.String) -> a
    void call(java.lang.String) -> b
    boolean showCallScreen() -> a
    boolean showCallScreenWithDialpad(boolean) -> a
    boolean endCall() -> b
    void answerRingingCall() -> c
    void silenceRinger() -> d
    boolean isOffhook() -> e
    boolean isRinging() -> f
    boolean isIdle() -> g
    boolean isRadioOn() -> h
    boolean isSimPinEnabled() -> i
    void cancelMissedCallsNotification() -> j
    boolean supplyPin(java.lang.String) -> c
    boolean handlePinMmi(java.lang.String) -> d
    void toggleRadioOnOff() -> k
    boolean setRadio(boolean) -> b
    void updateServiceLocation() -> l
    void enableLocationUpdates() -> m
    void disableLocationUpdates() -> n
    int enableApnType(java.lang.String) -> e
    int disableApnType(java.lang.String) -> f
    boolean enableDataConnectivity() -> o
    boolean disableDataConnectivity() -> p
    boolean isDataConnectivityPossible() -> q
    android.os.Bundle getCellLocation() -> r
    java.util.List getNeighboringCellInfo() -> s
    int getCallState() -> t
    int getDataActivity() -> u
    int getDataState() -> v
    int getActivePhoneType() -> w
    int getCdmaEriIconIndex() -> x
    int getCdmaEriIconMode() -> y
    java.lang.String getCdmaEriText() -> z
    boolean getCdmaNeedsProvisioning() -> A
    int getVoiceMessageCount() -> B
    int getNetworkType() -> C
    boolean hasIccCard() -> D
com.itheima.mobilesafe74.activity.AToolActivity -> com.itheima.mobilesafe74.activity.AToolActivity:
    android.widget.TextView tv_query_phone_address -> a
    android.widget.TextView tv_sms_backup -> b
    android.widget.ProgressBar pb_bar -> c
    android.widget.TextView tv_commonnumber_query -> d
    android.widget.TextView tv_app_lock -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initAppLock() -> b
    void initCommonNumberQuery() -> c
    void initSmsBackUp() -> d
    void showSmsBackUpDialog() -> a
    void initPhoneAddress() -> e
    android.widget.ProgressBar access$0(com.itheima.mobilesafe74.activity.AToolActivity) -> a
com.itheima.mobilesafe74.activity.AToolActivity$1 -> com.itheima.mobilesafe74.activity.a:
    com.itheima.mobilesafe74.activity.AToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.AToolActivity$2 -> com.itheima.mobilesafe74.activity.b:
    com.itheima.mobilesafe74.activity.AToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.AToolActivity$3 -> com.itheima.mobilesafe74.activity.c:
    com.itheima.mobilesafe74.activity.AToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.AToolActivity$4 -> com.itheima.mobilesafe74.activity.d:
    com.itheima.mobilesafe74.activity.AToolActivity this$0 -> a
    android.app.ProgressDialog val$progressDialog -> b
    void run() -> run
    com.itheima.mobilesafe74.activity.AToolActivity access$0(com.itheima.mobilesafe74.activity.AToolActivity$4) -> a
com.itheima.mobilesafe74.activity.AToolActivity$4$1 -> com.itheima.mobilesafe74.activity.e:
    com.itheima.mobilesafe74.activity.AToolActivity$4 this$1 -> a
    android.app.ProgressDialog val$progressDialog -> b
    void setProgress(int) -> a
    void setMax(int) -> b
com.itheima.mobilesafe74.activity.AToolActivity$5 -> com.itheima.mobilesafe74.activity.f:
    com.itheima.mobilesafe74.activity.AToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.AnitVirusActivity -> com.itheima.mobilesafe74.activity.AnitVirusActivity:
    android.widget.ImageView iv_scanning -> a
    android.widget.TextView tv_name -> b
    android.widget.ProgressBar pb_bar -> c
    android.widget.LinearLayout ll_add_text -> d
    int index -> e
    java.util.List mVirusScanInfoList -> f
    android.os.Handler mHandler -> g
    void onCreate(android.os.Bundle) -> onCreate
    void unInstallVirus() -> a
    void checkVirus() -> b
    void initAnimation() -> c
    void initUI() -> d
    android.widget.TextView access$0(com.itheima.mobilesafe74.activity.AnitVirusActivity) -> a
    android.widget.LinearLayout access$1(com.itheima.mobilesafe74.activity.AnitVirusActivity) -> b
    android.widget.ImageView access$2(com.itheima.mobilesafe74.activity.AnitVirusActivity) -> c
    void access$3(com.itheima.mobilesafe74.activity.AnitVirusActivity,java.util.List) -> a
    android.widget.ProgressBar access$4(com.itheima.mobilesafe74.activity.AnitVirusActivity) -> d
    java.util.List access$5(com.itheima.mobilesafe74.activity.AnitVirusActivity) -> e
    int access$6(com.itheima.mobilesafe74.activity.AnitVirusActivity) -> f
    void access$7(com.itheima.mobilesafe74.activity.AnitVirusActivity,int) -> a
    android.os.Handler access$8(com.itheima.mobilesafe74.activity.AnitVirusActivity) -> g
com.itheima.mobilesafe74.activity.AnitVirusActivity$1 -> com.itheima.mobilesafe74.activity.g:
    com.itheima.mobilesafe74.activity.AnitVirusActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.activity.AnitVirusActivity$2 -> com.itheima.mobilesafe74.activity.h:
    com.itheima.mobilesafe74.activity.AnitVirusActivity this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.AnitVirusActivity$ScanInfo -> com.itheima.mobilesafe74.activity.i:
    boolean isVirus -> a
    java.lang.String packageName -> b
    java.lang.String name -> c
    com.itheima.mobilesafe74.activity.AnitVirusActivity this$0 -> d
com.itheima.mobilesafe74.activity.AppLockActivity -> com.itheima.mobilesafe74.activity.AppLockActivity:
    android.widget.Button bt_unlock -> a
    android.widget.Button bt_lock -> b
    android.widget.LinearLayout ll_unlock -> c
    android.widget.LinearLayout ll_lock -> d
    android.widget.TextView tv_unlock -> e
    android.widget.TextView tv_lock -> f
    android.widget.ListView lv_unlock -> g
    android.widget.ListView lv_lock -> h
    java.util.List mAppInfoList -> i
    java.util.List mLockList -> j
    java.util.List mUnLockList -> k
    com.itheima.mobilesafe74.db.dao.AppLockDao mDao -> l
    com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter mLockAdapter -> m
    com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter mUnLockAdapter -> n
    android.os.Handler mHandler -> o
    android.view.animation.TranslateAnimation mTranslateAnimation -> p
    void onCreate(android.os.Bundle) -> onCreate
    void initAnimation() -> a
    void initData() -> b
    void initUI() -> c
    void access$0(com.itheima.mobilesafe74.activity.AppLockActivity,com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter) -> a
    android.widget.ListView access$1(com.itheima.mobilesafe74.activity.AppLockActivity) -> a
    com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter access$2(com.itheima.mobilesafe74.activity.AppLockActivity) -> b
    void access$3(com.itheima.mobilesafe74.activity.AppLockActivity,com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter) -> b
    android.widget.ListView access$4(com.itheima.mobilesafe74.activity.AppLockActivity) -> c
    com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter access$5(com.itheima.mobilesafe74.activity.AppLockActivity) -> d
    android.widget.TextView access$6(com.itheima.mobilesafe74.activity.AppLockActivity) -> e
    java.util.List access$7(com.itheima.mobilesafe74.activity.AppLockActivity) -> f
    android.widget.TextView access$8(com.itheima.mobilesafe74.activity.AppLockActivity) -> g
    java.util.List access$9(com.itheima.mobilesafe74.activity.AppLockActivity) -> h
    android.view.animation.TranslateAnimation access$10(com.itheima.mobilesafe74.activity.AppLockActivity) -> i
    com.itheima.mobilesafe74.db.dao.AppLockDao access$11(com.itheima.mobilesafe74.activity.AppLockActivity) -> j
    void access$12(com.itheima.mobilesafe74.activity.AppLockActivity,java.util.List) -> a
    void access$13(com.itheima.mobilesafe74.activity.AppLockActivity,java.util.List) -> b
    void access$14(com.itheima.mobilesafe74.activity.AppLockActivity,java.util.List) -> c
    void access$15(com.itheima.mobilesafe74.activity.AppLockActivity,com.itheima.mobilesafe74.db.dao.AppLockDao) -> a
    java.util.List access$16(com.itheima.mobilesafe74.activity.AppLockActivity) -> k
    android.os.Handler access$17(com.itheima.mobilesafe74.activity.AppLockActivity) -> l
    android.widget.LinearLayout access$18(com.itheima.mobilesafe74.activity.AppLockActivity) -> m
    android.widget.LinearLayout access$19(com.itheima.mobilesafe74.activity.AppLockActivity) -> n
    android.widget.Button access$20(com.itheima.mobilesafe74.activity.AppLockActivity) -> o
    android.widget.Button access$21(com.itheima.mobilesafe74.activity.AppLockActivity) -> p
com.itheima.mobilesafe74.activity.AppLockActivity$1 -> com.itheima.mobilesafe74.activity.j:
    com.itheima.mobilesafe74.activity.AppLockActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.activity.AppLockActivity$2 -> com.itheima.mobilesafe74.activity.k:
    com.itheima.mobilesafe74.activity.AppLockActivity this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.AppLockActivity$3 -> com.itheima.mobilesafe74.activity.l:
    com.itheima.mobilesafe74.activity.AppLockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.AppLockActivity$4 -> com.itheima.mobilesafe74.activity.m:
    com.itheima.mobilesafe74.activity.AppLockActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter -> com.itheima.mobilesafe74.activity.n:
    boolean isLock -> b
    com.itheima.mobilesafe74.activity.AppLockActivity this$0 -> a
    int getCount() -> getCount
    com.itheima.mobilesafe74.db.domain.AppInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    boolean access$1(com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter) -> a
    com.itheima.mobilesafe74.activity.AppLockActivity access$2(com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter) -> b
com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter$1 -> com.itheima.mobilesafe74.activity.o:
    com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter this$1 -> a
    android.view.View val$animationView -> b
    com.itheima.mobilesafe74.db.domain.AppInfo val$appInfo -> c
    void onClick(android.view.View) -> onClick
    com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter access$0(com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter$1) -> a
com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter$1$1 -> com.itheima.mobilesafe74.activity.p:
    com.itheima.mobilesafe74.activity.AppLockActivity$MyAdapter$1 this$2 -> a
    com.itheima.mobilesafe74.db.domain.AppInfo val$appInfo -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.itheima.mobilesafe74.activity.AppLockActivity$ViewHolder -> com.itheima.mobilesafe74.activity.q:
    android.widget.ImageView iv_icon -> a
    android.widget.TextView tv_name -> b
    android.widget.ImageView iv_lock -> c
com.itheima.mobilesafe74.activity.AppManagerActivity -> com.itheima.mobilesafe74.activity.AppManagerActivity:
    java.util.List mAppInfoList -> a
    android.widget.ListView lv_app_list -> b
    com.itheima.mobilesafe74.activity.AppManagerActivity$MyAdapter mAdapter -> c
    java.util.List mSystemList -> d
    java.util.List mCustomerList -> e
    com.itheima.mobilesafe74.db.domain.AppInfo mAppInfo -> f
    android.os.Handler mHandler -> g
    android.widget.TextView tv_des -> h
    android.widget.PopupWindow mPopupWindow -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initList() -> a
    void showPopupWindow(android.view.View) -> a
    void initTitle() -> b
    long getAvailSpace(java.lang.String) -> a
    void onResume() -> onResume
    void getData() -> c
    void onClick(android.view.View) -> onClick
    void access$0(com.itheima.mobilesafe74.activity.AppManagerActivity,com.itheima.mobilesafe74.activity.AppManagerActivity$MyAdapter) -> a
    android.widget.ListView access$1(com.itheima.mobilesafe74.activity.AppManagerActivity) -> a
    com.itheima.mobilesafe74.activity.AppManagerActivity$MyAdapter access$2(com.itheima.mobilesafe74.activity.AppManagerActivity) -> b
    android.widget.TextView access$3(com.itheima.mobilesafe74.activity.AppManagerActivity) -> c
    java.util.List access$4(com.itheima.mobilesafe74.activity.AppManagerActivity) -> d
    java.util.List access$5(com.itheima.mobilesafe74.activity.AppManagerActivity) -> e
    void access$6(com.itheima.mobilesafe74.activity.AppManagerActivity,com.itheima.mobilesafe74.db.domain.AppInfo) -> a
    void access$7(com.itheima.mobilesafe74.activity.AppManagerActivity,java.util.List) -> a
    void access$8(com.itheima.mobilesafe74.activity.AppManagerActivity,java.util.List) -> b
    void access$9(com.itheima.mobilesafe74.activity.AppManagerActivity,java.util.List) -> c
    java.util.List access$10(com.itheima.mobilesafe74.activity.AppManagerActivity) -> f
    android.os.Handler access$11(com.itheima.mobilesafe74.activity.AppManagerActivity) -> g
com.itheima.mobilesafe74.activity.AppManagerActivity$1 -> com.itheima.mobilesafe74.activity.r:
    com.itheima.mobilesafe74.activity.AppManagerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.activity.AppManagerActivity$2 -> com.itheima.mobilesafe74.activity.s:
    com.itheima.mobilesafe74.activity.AppManagerActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.itheima.mobilesafe74.activity.AppManagerActivity$3 -> com.itheima.mobilesafe74.activity.t:
    com.itheima.mobilesafe74.activity.AppManagerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itheima.mobilesafe74.activity.AppManagerActivity$4 -> com.itheima.mobilesafe74.activity.u:
    com.itheima.mobilesafe74.activity.AppManagerActivity this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.AppManagerActivity$MyAdapter -> com.itheima.mobilesafe74.activity.v:
    com.itheima.mobilesafe74.activity.AppManagerActivity this$0 -> a
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    int getCount() -> getCount
    com.itheima.mobilesafe74.db.domain.AppInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.itheima.mobilesafe74.activity.AppManagerActivity$ViewHolder -> com.itheima.mobilesafe74.activity.w:
    android.widget.ImageView iv_icon -> a
    android.widget.TextView tv_name -> b
    android.widget.TextView tv_path -> c
com.itheima.mobilesafe74.activity.AppManagerActivity$ViewTitleHolder -> com.itheima.mobilesafe74.activity.x:
    android.widget.TextView tv_title -> a
com.itheima.mobilesafe74.activity.BaseCacheClearActivity -> com.itheima.mobilesafe74.activity.BaseCacheClearActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.itheima.mobilesafe74.activity.BaseSetupActivity -> com.itheima.mobilesafe74.activity.y:
    android.view.GestureDetector gestureDetector -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void showNextPage() -> a
    void showPrePage() -> b
    void nextPage(android.view.View) -> nextPage
    void prePage(android.view.View) -> prePage
com.itheima.mobilesafe74.activity.BaseSetupActivity$1 -> com.itheima.mobilesafe74.activity.z:
    com.itheima.mobilesafe74.activity.BaseSetupActivity this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.itheima.mobilesafe74.activity.BlackNumberActivity -> com.itheima.mobilesafe74.activity.BlackNumberActivity:
    android.widget.Button bt_add -> a
    android.widget.ListView lv_blacknumber -> b
    com.itheima.mobilesafe74.db.dao.BlackNumberDao mDao -> c
    java.util.List mBlackNumberList -> d
    com.itheima.mobilesafe74.activity.BlackNumberActivity$MyAdapter mAdapter -> e
    int mode -> f
    boolean mIsLoad -> g
    int mCount -> h
    android.os.Handler mHandler -> i
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> b
    void initUI() -> c
    void showDialog() -> a
    com.itheima.mobilesafe74.activity.BlackNumberActivity$MyAdapter access$0(com.itheima.mobilesafe74.activity.BlackNumberActivity) -> a
    void access$1(com.itheima.mobilesafe74.activity.BlackNumberActivity,com.itheima.mobilesafe74.activity.BlackNumberActivity$MyAdapter) -> a
    android.widget.ListView access$2(com.itheima.mobilesafe74.activity.BlackNumberActivity) -> b
    java.util.List access$3(com.itheima.mobilesafe74.activity.BlackNumberActivity) -> c
    com.itheima.mobilesafe74.db.dao.BlackNumberDao access$4(com.itheima.mobilesafe74.activity.BlackNumberActivity) -> d
    void access$5(com.itheima.mobilesafe74.activity.BlackNumberActivity,com.itheima.mobilesafe74.db.dao.BlackNumberDao) -> a
    void access$6(com.itheima.mobilesafe74.activity.BlackNumberActivity,java.util.List) -> a
    void access$7(com.itheima.mobilesafe74.activity.BlackNumberActivity,int) -> a
    android.os.Handler access$8(com.itheima.mobilesafe74.activity.BlackNumberActivity) -> e
    boolean access$9(com.itheima.mobilesafe74.activity.BlackNumberActivity) -> f
    int access$10(com.itheima.mobilesafe74.activity.BlackNumberActivity) -> g
    void access$11(com.itheima.mobilesafe74.activity.BlackNumberActivity,int) -> b
    int access$12(com.itheima.mobilesafe74.activity.BlackNumberActivity) -> h
com.itheima.mobilesafe74.activity.BlackNumberActivity$1 -> com.itheima.mobilesafe74.activity.aa:
    com.itheima.mobilesafe74.activity.BlackNumberActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.activity.BlackNumberActivity$2 -> com.itheima.mobilesafe74.activity.ab:
    com.itheima.mobilesafe74.activity.BlackNumberActivity this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.BlackNumberActivity$3 -> com.itheima.mobilesafe74.activity.ac:
    com.itheima.mobilesafe74.activity.BlackNumberActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.BlackNumberActivity$4 -> com.itheima.mobilesafe74.activity.ad:
    com.itheima.mobilesafe74.activity.BlackNumberActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    com.itheima.mobilesafe74.activity.BlackNumberActivity access$0(com.itheima.mobilesafe74.activity.BlackNumberActivity$4) -> a
com.itheima.mobilesafe74.activity.BlackNumberActivity$4$1 -> com.itheima.mobilesafe74.activity.ae:
    com.itheima.mobilesafe74.activity.BlackNumberActivity$4 this$1 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.BlackNumberActivity$5 -> com.itheima.mobilesafe74.activity.af:
    com.itheima.mobilesafe74.activity.BlackNumberActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.itheima.mobilesafe74.activity.BlackNumberActivity$6 -> com.itheima.mobilesafe74.activity.ag:
    com.itheima.mobilesafe74.activity.BlackNumberActivity this$0 -> a
    android.widget.EditText val$et_phone -> b
    android.app.AlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.BlackNumberActivity$7 -> com.itheima.mobilesafe74.activity.ah:
    com.itheima.mobilesafe74.activity.BlackNumberActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.BlackNumberActivity$MyAdapter -> com.itheima.mobilesafe74.activity.ai:
    com.itheima.mobilesafe74.activity.BlackNumberActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.itheima.mobilesafe74.activity.BlackNumberActivity access$0(com.itheima.mobilesafe74.activity.BlackNumberActivity$MyAdapter) -> a
com.itheima.mobilesafe74.activity.BlackNumberActivity$MyAdapter$1 -> com.itheima.mobilesafe74.activity.aj:
    com.itheima.mobilesafe74.activity.BlackNumberActivity$MyAdapter this$1 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.BlackNumberActivity$ViewHolder -> com.itheima.mobilesafe74.activity.ak:
    android.widget.TextView tv_phone -> a
    android.widget.TextView tv_mode -> b
    android.widget.ImageView iv_delete -> c
com.itheima.mobilesafe74.activity.CacheClearActivity -> com.itheima.mobilesafe74.activity.CacheClearActivity:
    android.widget.Button bt_clear -> a
    android.widget.ProgressBar pb_bar -> b
    android.widget.TextView tv_name -> c
    android.widget.LinearLayout ll_add_text -> d
    android.content.pm.PackageManager mPm -> e
    int mIndex -> f
    android.os.Handler mHandler -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void getPackageCache(java.lang.String) -> a
    void initUI() -> b
    android.widget.LinearLayout access$0(com.itheima.mobilesafe74.activity.CacheClearActivity) -> a
    android.widget.TextView access$1(com.itheima.mobilesafe74.activity.CacheClearActivity) -> b
    void access$2(com.itheima.mobilesafe74.activity.CacheClearActivity,android.content.pm.PackageManager) -> a
    android.content.pm.PackageManager access$3(com.itheima.mobilesafe74.activity.CacheClearActivity) -> c
    android.widget.ProgressBar access$4(com.itheima.mobilesafe74.activity.CacheClearActivity) -> d
    int access$5(com.itheima.mobilesafe74.activity.CacheClearActivity) -> e
    void access$6(com.itheima.mobilesafe74.activity.CacheClearActivity,int) -> a
    android.os.Handler access$7(com.itheima.mobilesafe74.activity.CacheClearActivity) -> f
com.itheima.mobilesafe74.activity.CacheClearActivity$1 -> com.itheima.mobilesafe74.activity.al:
    com.itheima.mobilesafe74.activity.CacheClearActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    com.itheima.mobilesafe74.activity.CacheClearActivity access$0(com.itheima.mobilesafe74.activity.CacheClearActivity$1) -> a
com.itheima.mobilesafe74.activity.CacheClearActivity$1$1 -> com.itheima.mobilesafe74.activity.am:
    com.itheima.mobilesafe74.activity.CacheClearActivity$1 this$1 -> a
    com.itheima.mobilesafe74.activity.CacheClearActivity$CacheInfo val$cacheInfo -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.CacheClearActivity$2 -> com.itheima.mobilesafe74.activity.an:
    com.itheima.mobilesafe74.activity.CacheClearActivity this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.CacheClearActivity$3 -> com.itheima.mobilesafe74.activity.ao:
    com.itheima.mobilesafe74.activity.CacheClearActivity this$0 -> a
    void onGetStatsCompleted(android.content.pm.PackageStats,boolean) -> a
com.itheima.mobilesafe74.activity.CacheClearActivity$4 -> com.itheima.mobilesafe74.activity.ap:
    com.itheima.mobilesafe74.activity.CacheClearActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.itheima.mobilesafe74.activity.CacheClearActivity access$0(com.itheima.mobilesafe74.activity.CacheClearActivity$4) -> a
com.itheima.mobilesafe74.activity.CacheClearActivity$4$1 -> com.itheima.mobilesafe74.activity.aq:
    com.itheima.mobilesafe74.activity.CacheClearActivity$4 this$1 -> a
    void onRemoveCompleted(java.lang.String,boolean) -> a
com.itheima.mobilesafe74.activity.CacheClearActivity$CacheInfo -> com.itheima.mobilesafe74.activity.ar:
    java.lang.String name -> a
    android.graphics.drawable.Drawable icon -> b
    java.lang.String packagename -> c
    long cacheSize -> d
    com.itheima.mobilesafe74.activity.CacheClearActivity this$0 -> e
com.itheima.mobilesafe74.activity.CommonNumberQueryActivity -> com.itheima.mobilesafe74.activity.CommonNumberQueryActivity:
    android.widget.ExpandableListView elv_common_number -> a
    java.util.List mGroup -> b
    com.itheima.mobilesafe74.activity.CommonNumberQueryActivity$MyAdapter mAdapter -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void startCall(java.lang.String) -> a
    void initUI() -> b
    java.util.List access$0(com.itheima.mobilesafe74.activity.CommonNumberQueryActivity) -> a
    com.itheima.mobilesafe74.activity.CommonNumberQueryActivity$MyAdapter access$1(com.itheima.mobilesafe74.activity.CommonNumberQueryActivity) -> b
com.itheima.mobilesafe74.activity.CommonNumberQueryActivity$1 -> com.itheima.mobilesafe74.activity.as:
    com.itheima.mobilesafe74.activity.CommonNumberQueryActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.itheima.mobilesafe74.activity.CommonNumberQueryActivity$MyAdapter -> com.itheima.mobilesafe74.activity.at:
    com.itheima.mobilesafe74.activity.CommonNumberQueryActivity this$0 -> a
    com.itheima.mobilesafe74.engine.CommonnumDao$Child getChild(int,int) -> a
    long getChildId(int,int) -> getChildId
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    int getChildrenCount(int) -> getChildrenCount
    com.itheima.mobilesafe74.engine.CommonnumDao$Group getGroup(int) -> a
    int getGroupCount() -> getGroupCount
    long getGroupId(int) -> getGroupId
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    boolean hasStableIds() -> hasStableIds
    boolean isChildSelectable(int,int) -> isChildSelectable
    java.lang.Object getChild(int,int) -> getChild
    java.lang.Object getGroup(int) -> getGroup
com.itheima.mobilesafe74.activity.ContactListActivity -> com.itheima.mobilesafe74.activity.ContactListActivity:
    android.widget.ListView lv_contact -> a
    java.util.List contactList -> b
    com.itheima.mobilesafe74.activity.ContactListActivity$MyAdapter mAdapter -> c
    android.os.Handler mHandler -> d
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void initUI() -> b
    void access$0(com.itheima.mobilesafe74.activity.ContactListActivity,com.itheima.mobilesafe74.activity.ContactListActivity$MyAdapter) -> a
    android.widget.ListView access$1(com.itheima.mobilesafe74.activity.ContactListActivity) -> a
    com.itheima.mobilesafe74.activity.ContactListActivity$MyAdapter access$2(com.itheima.mobilesafe74.activity.ContactListActivity) -> b
    java.util.List access$3(com.itheima.mobilesafe74.activity.ContactListActivity) -> c
    android.os.Handler access$4(com.itheima.mobilesafe74.activity.ContactListActivity) -> d
com.itheima.mobilesafe74.activity.ContactListActivity$1 -> com.itheima.mobilesafe74.activity.au:
    com.itheima.mobilesafe74.activity.ContactListActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.activity.ContactListActivity$2 -> com.itheima.mobilesafe74.activity.av:
    com.itheima.mobilesafe74.activity.ContactListActivity this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.ContactListActivity$3 -> com.itheima.mobilesafe74.activity.aw:
    com.itheima.mobilesafe74.activity.ContactListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itheima.mobilesafe74.activity.ContactListActivity$MyAdapter -> com.itheima.mobilesafe74.activity.ax:
    com.itheima.mobilesafe74.activity.ContactListActivity this$0 -> a
    int getCount() -> getCount
    java.util.HashMap getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.itheima.mobilesafe74.activity.EnterPsdActivity -> com.itheima.mobilesafe74.activity.EnterPsdActivity:
    java.lang.String packagename -> a
    android.widget.TextView tv_app_name -> b
    android.widget.ImageView iv_app_icon -> c
    android.widget.EditText et_psd -> d
    android.widget.Button bt_submit -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void initUI() -> b
    void onBackPressed() -> onBackPressed
    android.widget.EditText access$0(com.itheima.mobilesafe74.activity.EnterPsdActivity) -> a
    java.lang.String access$1(com.itheima.mobilesafe74.activity.EnterPsdActivity) -> b
com.itheima.mobilesafe74.activity.EnterPsdActivity$1 -> com.itheima.mobilesafe74.activity.ay:
    com.itheima.mobilesafe74.activity.EnterPsdActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.HomeActivity -> com.itheima.mobilesafe74.activity.HomeActivity:
    android.widget.GridView gv_home -> a
    java.lang.String[] mTitleStrs -> b
    int[] mDrawableIds -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> b
    void showDialog() -> a
    void showConfirmPsdDialog() -> c
    void showSetPsdDialog() -> d
    void initUI() -> e
    java.lang.String[] access$0(com.itheima.mobilesafe74.activity.HomeActivity) -> a
    int[] access$1(com.itheima.mobilesafe74.activity.HomeActivity) -> b
com.itheima.mobilesafe74.activity.HomeActivity$1 -> com.itheima.mobilesafe74.activity.az:
    com.itheima.mobilesafe74.activity.HomeActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itheima.mobilesafe74.activity.HomeActivity$2 -> com.itheima.mobilesafe74.activity.ba:
    com.itheima.mobilesafe74.activity.HomeActivity this$0 -> a
    android.view.View val$view -> b
    android.app.AlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.HomeActivity$3 -> com.itheima.mobilesafe74.activity.bb:
    com.itheima.mobilesafe74.activity.HomeActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.HomeActivity$4 -> com.itheima.mobilesafe74.activity.bc:
    com.itheima.mobilesafe74.activity.HomeActivity this$0 -> a
    android.view.View val$view -> b
    android.app.AlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.HomeActivity$5 -> com.itheima.mobilesafe74.activity.bd:
    com.itheima.mobilesafe74.activity.HomeActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.HomeActivity$MyAdapter -> com.itheima.mobilesafe74.activity.be:
    com.itheima.mobilesafe74.activity.HomeActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.itheima.mobilesafe74.activity.ProcessManagerActivity -> com.itheima.mobilesafe74.activity.ProcessManagerActivity:
    android.widget.TextView tv_process_count -> a
    android.widget.TextView tv_memory_info -> b
    android.widget.TextView tv_des -> c
    android.widget.ListView lv_process_list -> d
    android.widget.Button bt_select_all -> e
    android.widget.Button bt_select_reverse -> f
    android.widget.Button bt_clear -> g
    android.widget.Button bt_setting -> h
    int mProcessCount -> i
    java.util.List mProcessInfoList -> j
    java.util.ArrayList mSystemList -> k
    java.util.ArrayList mCustomerList -> l
    com.itheima.mobilesafe74.activity.ProcessManagerActivity$MyAdapter mAdapter -> m
    com.itheima.mobilesafe74.db.domain.ProcessInfo mProcessInfo -> n
    android.os.Handler mHandler -> o
    long mAvailSpace -> p
    java.lang.String mStrTotalSpace -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initListData() -> a
    void getData() -> b
    void initTitleData() -> c
    void initUI() -> d
    void onClick(android.view.View) -> onClick
    void setting() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void clearAll() -> f
    void selectReverse() -> g
    void selectAll() -> h
    void access$0(com.itheima.mobilesafe74.activity.ProcessManagerActivity,com.itheima.mobilesafe74.activity.ProcessManagerActivity$MyAdapter) -> a
    android.widget.ListView access$1(com.itheima.mobilesafe74.activity.ProcessManagerActivity) -> a
    com.itheima.mobilesafe74.activity.ProcessManagerActivity$MyAdapter access$2(com.itheima.mobilesafe74.activity.ProcessManagerActivity) -> b
    android.widget.TextView access$3(com.itheima.mobilesafe74.activity.ProcessManagerActivity) -> c
    java.util.ArrayList access$4(com.itheima.mobilesafe74.activity.ProcessManagerActivity) -> d
    java.util.ArrayList access$5(com.itheima.mobilesafe74.activity.ProcessManagerActivity) -> e
    void access$6(com.itheima.mobilesafe74.activity.ProcessManagerActivity,java.util.List) -> a
    void access$7(com.itheima.mobilesafe74.activity.ProcessManagerActivity,java.util.ArrayList) -> a
    void access$8(com.itheima.mobilesafe74.activity.ProcessManagerActivity,java.util.ArrayList) -> b
    java.util.List access$9(com.itheima.mobilesafe74.activity.ProcessManagerActivity) -> f
    android.os.Handler access$10(com.itheima.mobilesafe74.activity.ProcessManagerActivity) -> g
    void access$11(com.itheima.mobilesafe74.activity.ProcessManagerActivity,com.itheima.mobilesafe74.db.domain.ProcessInfo) -> a
    com.itheima.mobilesafe74.db.domain.ProcessInfo access$12(com.itheima.mobilesafe74.activity.ProcessManagerActivity) -> h
com.itheima.mobilesafe74.activity.ProcessManagerActivity$1 -> com.itheima.mobilesafe74.activity.bf:
    com.itheima.mobilesafe74.activity.ProcessManagerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.activity.ProcessManagerActivity$2 -> com.itheima.mobilesafe74.activity.bg:
    com.itheima.mobilesafe74.activity.ProcessManagerActivity this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.ProcessManagerActivity$3 -> com.itheima.mobilesafe74.activity.bh:
    com.itheima.mobilesafe74.activity.ProcessManagerActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.itheima.mobilesafe74.activity.ProcessManagerActivity$4 -> com.itheima.mobilesafe74.activity.bi:
    com.itheima.mobilesafe74.activity.ProcessManagerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itheima.mobilesafe74.activity.ProcessManagerActivity$MyAdapter -> com.itheima.mobilesafe74.activity.bj:
    com.itheima.mobilesafe74.activity.ProcessManagerActivity this$0 -> a
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    int getCount() -> getCount
    com.itheima.mobilesafe74.db.domain.ProcessInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.itheima.mobilesafe74.activity.ProcessManagerActivity$ViewHolder -> com.itheima.mobilesafe74.activity.bk:
    android.widget.ImageView iv_icon -> a
    android.widget.TextView tv_name -> b
    android.widget.TextView tv_memory_info -> c
    android.widget.CheckBox cb_box -> d
com.itheima.mobilesafe74.activity.ProcessManagerActivity$ViewTitleHolder -> com.itheima.mobilesafe74.activity.bl:
    android.widget.TextView tv_title -> a
com.itheima.mobilesafe74.activity.ProcessSettingActivity -> com.itheima.mobilesafe74.activity.ProcessSettingActivity:
    android.widget.CheckBox cb_show_system -> a
    android.widget.CheckBox cb_lock_clear -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initLockScreenClear() -> a
    void initSystemShow() -> b
    android.widget.CheckBox access$0(com.itheima.mobilesafe74.activity.ProcessSettingActivity) -> a
    android.widget.CheckBox access$1(com.itheima.mobilesafe74.activity.ProcessSettingActivity) -> b
com.itheima.mobilesafe74.activity.ProcessSettingActivity$1 -> com.itheima.mobilesafe74.activity.bm:
    com.itheima.mobilesafe74.activity.ProcessSettingActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.itheima.mobilesafe74.activity.ProcessSettingActivity$2 -> com.itheima.mobilesafe74.activity.bn:
    com.itheima.mobilesafe74.activity.ProcessSettingActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.itheima.mobilesafe74.activity.QueryAddressActivity -> com.itheima.mobilesafe74.activity.QueryAddressActivity:
    android.widget.EditText et_phone -> a
    android.widget.Button bt_query -> b
    android.widget.TextView tv_query_result -> c
    java.lang.String mAddress -> d
    android.os.Handler mHandler -> e
    void onCreate(android.os.Bundle) -> onCreate
    void initUI() -> a
    void query(java.lang.String) -> a
    android.widget.TextView access$0(com.itheima.mobilesafe74.activity.QueryAddressActivity) -> a
    java.lang.String access$1(com.itheima.mobilesafe74.activity.QueryAddressActivity) -> b
    android.widget.EditText access$2(com.itheima.mobilesafe74.activity.QueryAddressActivity) -> c
    void access$3(com.itheima.mobilesafe74.activity.QueryAddressActivity,java.lang.String) -> a
    android.os.Handler access$4(com.itheima.mobilesafe74.activity.QueryAddressActivity) -> d
com.itheima.mobilesafe74.activity.QueryAddressActivity$1 -> com.itheima.mobilesafe74.activity.bo:
    com.itheima.mobilesafe74.activity.QueryAddressActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.activity.QueryAddressActivity$2 -> com.itheima.mobilesafe74.activity.bp:
    com.itheima.mobilesafe74.activity.QueryAddressActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.QueryAddressActivity$3 -> com.itheima.mobilesafe74.activity.bq:
    com.itheima.mobilesafe74.activity.QueryAddressActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.itheima.mobilesafe74.activity.QueryAddressActivity$4 -> com.itheima.mobilesafe74.activity.br:
    com.itheima.mobilesafe74.activity.QueryAddressActivity this$0 -> a
    java.lang.String val$phone -> b
    void run() -> run
com.itheima.mobilesafe74.activity.SDCacheClearActivity -> com.itheima.mobilesafe74.activity.SDCacheClearActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.itheima.mobilesafe74.activity.SettingActivity -> com.itheima.mobilesafe74.activity.SettingActivity:
    java.lang.String[] mToastStyleDes -> a
    int mToastStyle -> b
    com.itheima.mobilesafe74.view.SettingClickView scv_toast_style -> c
    void onCreate(android.os.Bundle) -> onCreate
    void initAppLock() -> b
    void initBlacknumber() -> c
    void initLocation() -> d
    void initToastStyle() -> e
    void showToastStyleDialog() -> a
    void initAddress() -> f
    void initUpdate() -> g
    com.itheima.mobilesafe74.view.SettingClickView access$0(com.itheima.mobilesafe74.activity.SettingActivity) -> a
    java.lang.String[] access$1(com.itheima.mobilesafe74.activity.SettingActivity) -> b
com.itheima.mobilesafe74.activity.SettingActivity$1 -> com.itheima.mobilesafe74.activity.bs:
    com.itheima.mobilesafe74.activity.SettingActivity this$0 -> a
    com.itheima.mobilesafe74.view.SettingItemView val$siv_app_lock -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.SettingActivity$2 -> com.itheima.mobilesafe74.activity.bt:
    com.itheima.mobilesafe74.activity.SettingActivity this$0 -> a
    com.itheima.mobilesafe74.view.SettingItemView val$siv_blacknumber -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.SettingActivity$3 -> com.itheima.mobilesafe74.activity.bu:
    com.itheima.mobilesafe74.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.SettingActivity$4 -> com.itheima.mobilesafe74.activity.bv:
    com.itheima.mobilesafe74.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.SettingActivity$5 -> com.itheima.mobilesafe74.activity.bw:
    com.itheima.mobilesafe74.activity.SettingActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.itheima.mobilesafe74.activity.SettingActivity$6 -> com.itheima.mobilesafe74.activity.bx:
    com.itheima.mobilesafe74.activity.SettingActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.itheima.mobilesafe74.activity.SettingActivity$7 -> com.itheima.mobilesafe74.activity.by:
    com.itheima.mobilesafe74.activity.SettingActivity this$0 -> a
    com.itheima.mobilesafe74.view.SettingItemView val$siv_address -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.SettingActivity$8 -> com.itheima.mobilesafe74.activity.bz:
    com.itheima.mobilesafe74.activity.SettingActivity this$0 -> a
    com.itheima.mobilesafe74.view.SettingItemView val$siv_update -> b
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.Setup1Activity -> com.itheima.mobilesafe74.activity.Setup1Activity:
    void onCreate(android.os.Bundle) -> onCreate
    void showNextPage() -> a
    void showPrePage() -> b
com.itheima.mobilesafe74.activity.Setup2Activity -> com.itheima.mobilesafe74.activity.Setup2Activity:
    com.itheima.mobilesafe74.view.SettingItemView siv_sim_bound -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initUI() -> c
    void showNextPage() -> a
    void showPrePage() -> b
    com.itheima.mobilesafe74.view.SettingItemView access$0(com.itheima.mobilesafe74.activity.Setup2Activity) -> a
com.itheima.mobilesafe74.activity.Setup2Activity$1 -> com.itheima.mobilesafe74.activity.ca:
    com.itheima.mobilesafe74.activity.Setup2Activity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.Setup3Activity -> com.itheima.mobilesafe74.activity.Setup3Activity:
    android.widget.EditText et_phone_number -> a
    android.widget.Button bt_select_number -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initUI() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showNextPage() -> a
    void showPrePage() -> b
com.itheima.mobilesafe74.activity.Setup3Activity$1 -> com.itheima.mobilesafe74.activity.cb:
    com.itheima.mobilesafe74.activity.Setup3Activity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.Setup4Activity -> com.itheima.mobilesafe74.activity.Setup4Activity:
    android.widget.CheckBox cb_box -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initUI() -> c
    void showNextPage() -> a
    void showPrePage() -> b
    android.widget.CheckBox access$0(com.itheima.mobilesafe74.activity.Setup4Activity) -> a
com.itheima.mobilesafe74.activity.Setup4Activity$1 -> com.itheima.mobilesafe74.activity.cc:
    com.itheima.mobilesafe74.activity.Setup4Activity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.itheima.mobilesafe74.activity.SetupOverActivity -> com.itheima.mobilesafe74.activity.SetupOverActivity:
    android.widget.TextView tv_phone -> a
    android.widget.TextView tv_reset_setup -> b
    void onCreate(android.os.Bundle) -> onCreate
    void initUI() -> a
com.itheima.mobilesafe74.activity.SetupOverActivity$1 -> com.itheima.mobilesafe74.activity.cd:
    com.itheima.mobilesafe74.activity.SetupOverActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.SplashActivity -> com.itheima.mobilesafe74.activity.SplashActivity:
    android.widget.TextView tv_version_name -> a
    int mLocalVersionCode -> b
    java.lang.String mVersionDes -> c
    java.lang.String mDownloadUrl -> d
    android.os.Handler mHandler -> e
    android.widget.RelativeLayout rl_root -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initShortCut() -> d
    void initDB() -> e
    void initAddressDB(java.lang.String) -> a
    void initAnimation() -> f
    void showUpdateDialog() -> a
    void downloadApk() -> b
    void installApk(java.io.File) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void enterHome() -> c
    void initData() -> g
    void checkVersion() -> h
    int getVersionCode() -> i
    java.lang.String getVersionName() -> j
    void initUI() -> k
    android.os.Handler access$0(com.itheima.mobilesafe74.activity.SplashActivity) -> a
    void access$1(com.itheima.mobilesafe74.activity.SplashActivity,java.lang.String) -> a
    void access$2(com.itheima.mobilesafe74.activity.SplashActivity,java.lang.String) -> b
    java.lang.String access$3(com.itheima.mobilesafe74.activity.SplashActivity) -> b
    java.lang.String access$4(com.itheima.mobilesafe74.activity.SplashActivity) -> c
    int access$5(com.itheima.mobilesafe74.activity.SplashActivity) -> d
com.itheima.mobilesafe74.activity.SplashActivity$1 -> com.itheima.mobilesafe74.activity.ce:
    com.itheima.mobilesafe74.activity.SplashActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.activity.SplashActivity$2 -> com.itheima.mobilesafe74.activity.cf:
    com.itheima.mobilesafe74.activity.SplashActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.itheima.mobilesafe74.activity.SplashActivity$3 -> com.itheima.mobilesafe74.activity.cg:
    com.itheima.mobilesafe74.activity.SplashActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.itheima.mobilesafe74.activity.SplashActivity$4 -> com.itheima.mobilesafe74.activity.ch:
    com.itheima.mobilesafe74.activity.SplashActivity this$0 -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.itheima.mobilesafe74.activity.SplashActivity$5 -> com.itheima.mobilesafe74.activity.ci:
    com.itheima.mobilesafe74.activity.SplashActivity this$0 -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
    void onStart() -> a
    void onLoading(long,long,boolean) -> a
com.itheima.mobilesafe74.activity.SplashActivity$6 -> com.itheima.mobilesafe74.activity.cj:
    com.itheima.mobilesafe74.activity.SplashActivity this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.activity.TestActivity -> com.itheima.mobilesafe74.activity.TestActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.itheima.mobilesafe74.activity.ToastLocationActivity -> com.itheima.mobilesafe74.activity.ToastLocationActivity:
    android.widget.ImageView iv_drag -> a
    android.widget.Button bt_top -> b
    android.widget.Button bt_bottom -> c
    android.view.WindowManager mWM -> d
    int mScreenHeight -> e
    int mScreenWidth -> f
    long[] mHits -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initUI() -> a
    long[] access$0(com.itheima.mobilesafe74.activity.ToastLocationActivity) -> a
    int access$1(com.itheima.mobilesafe74.activity.ToastLocationActivity) -> b
    android.widget.ImageView access$2(com.itheima.mobilesafe74.activity.ToastLocationActivity) -> c
    int access$3(com.itheima.mobilesafe74.activity.ToastLocationActivity) -> d
    android.widget.Button access$4(com.itheima.mobilesafe74.activity.ToastLocationActivity) -> e
    android.widget.Button access$5(com.itheima.mobilesafe74.activity.ToastLocationActivity) -> f
com.itheima.mobilesafe74.activity.ToastLocationActivity$1 -> com.itheima.mobilesafe74.activity.ck:
    com.itheima.mobilesafe74.activity.ToastLocationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itheima.mobilesafe74.activity.ToastLocationActivity$2 -> com.itheima.mobilesafe74.activity.cl:
    int startX -> b
    int startY -> c
    com.itheima.mobilesafe74.activity.ToastLocationActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.itheima.mobilesafe74.activity.TrafficActivity -> com.itheima.mobilesafe74.activity.TrafficActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.itheima.mobilesafe74.db.AppLockOpenHelper -> com.itheima.mobilesafe74.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.itheima.mobilesafe74.db.BlackNumberOpenHelper -> com.itheima.mobilesafe74.a.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.itheima.mobilesafe74.db.dao.AppLockDao -> com.itheima.mobilesafe74.a.a.a:
    com.itheima.mobilesafe74.db.AppLockOpenHelper appLockOpenHelper -> a
    android.content.Context context -> b
    com.itheima.mobilesafe74.db.dao.AppLockDao appLockDao -> c
    com.itheima.mobilesafe74.db.dao.AppLockDao getInstance(android.content.Context) -> a
    void insert(java.lang.String) -> a
    void delete(java.lang.String) -> b
    java.util.List findAll() -> a
com.itheima.mobilesafe74.db.dao.BlackNumberDao -> com.itheima.mobilesafe74.a.a.b:
    com.itheima.mobilesafe74.db.BlackNumberOpenHelper blackNumberOpenHelper -> a
    com.itheima.mobilesafe74.db.dao.BlackNumberDao blackNumberDao -> b
    com.itheima.mobilesafe74.db.dao.BlackNumberDao getInstance(android.content.Context) -> a
    void insert(java.lang.String,java.lang.String) -> a
    void delete(java.lang.String) -> a
    java.util.List find(int) -> a
    int getCount() -> a
    int getMode(java.lang.String) -> b
com.itheima.mobilesafe74.db.domain.AppInfo -> com.itheima.mobilesafe74.a.b.a:
    java.lang.String name -> a
    java.lang.String packageName -> b
    android.graphics.drawable.Drawable icon -> c
    boolean isSdCard -> d
    boolean isSystem -> e
    java.lang.String getName() -> a
    java.lang.String getPackageName() -> b
com.itheima.mobilesafe74.db.domain.BlackNumberInfo -> com.itheima.mobilesafe74.a.b.b:
    java.lang.String phone -> a
    java.lang.String mode -> b
    java.lang.String toString() -> toString
com.itheima.mobilesafe74.db.domain.ProcessInfo -> com.itheima.mobilesafe74.a.b.c:
    java.lang.String name -> a
    android.graphics.drawable.Drawable icon -> b
    long memSize -> c
    boolean isCheck -> d
    boolean isSystem -> e
    java.lang.String packageName -> f
    java.lang.String getPackageName() -> a
com.itheima.mobilesafe74.engine.AddressDao -> com.itheima.mobilesafe74.b.a:
    java.lang.String path -> a
    java.lang.String mAddress -> b
    java.lang.String getAddress(java.lang.String) -> a
com.itheima.mobilesafe74.engine.AppInfoProvider -> com.itheima.mobilesafe74.b.b:
    java.util.List getAppInfoList(android.content.Context) -> a
com.itheima.mobilesafe74.engine.CommonnumDao -> com.itheima.mobilesafe74.b.c:
    java.lang.String path -> a
    java.util.List getGroup() -> a
    java.util.List getChild(java.lang.String) -> a
com.itheima.mobilesafe74.engine.CommonnumDao$Child -> com.itheima.mobilesafe74.b.d:
    java.lang.String _id -> a
    java.lang.String number -> b
    java.lang.String name -> c
    com.itheima.mobilesafe74.engine.CommonnumDao this$0 -> d
com.itheima.mobilesafe74.engine.CommonnumDao$Group -> com.itheima.mobilesafe74.b.e:
    java.lang.String name -> a
    java.lang.String idx -> b
    java.util.List childList -> c
    com.itheima.mobilesafe74.engine.CommonnumDao this$0 -> d
com.itheima.mobilesafe74.engine.ProcessInfoProvider -> com.itheima.mobilesafe74.b.f:
    int getProcessCount(android.content.Context) -> a
    long getAvailSpace(android.content.Context) -> b
    long getTotalSpace(android.content.Context) -> c
    java.util.List getProcessInfo(android.content.Context) -> d
    void killProcess(android.content.Context,com.itheima.mobilesafe74.db.domain.ProcessInfo) -> a
    void killAll(android.content.Context) -> e
com.itheima.mobilesafe74.engine.SmsBackUp -> com.itheima.mobilesafe74.b.g:
    int index -> a
    void backup(android.content.Context,java.lang.String,com.itheima.mobilesafe74.engine.SmsBackUp$CallBack) -> a
com.itheima.mobilesafe74.engine.SmsBackUp$CallBack -> com.itheima.mobilesafe74.b.h:
    void setMax(int) -> b
    void setProgress(int) -> a
com.itheima.mobilesafe74.engine.VirusDao -> com.itheima.mobilesafe74.b.i:
    java.lang.String path -> a
    java.util.List getVirusList() -> a
com.itheima.mobilesafe74.global.MyApplication -> com.itheima.mobilesafe74.global.MyApplication:
    void onCreate() -> onCreate
com.itheima.mobilesafe74.global.MyApplication$1 -> com.itheima.mobilesafe74.global.a:
    com.itheima.mobilesafe74.global.MyApplication this$0 -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.itheima.mobilesafe74.receiver.BootReceiver -> com.itheima.mobilesafe74.receiver.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobilesafe74.receiver.KillProcessReceiver -> com.itheima.mobilesafe74.receiver.KillProcessReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobilesafe74.receiver.MyAppWidgetProvider -> com.itheima.mobilesafe74.receiver.MyAppWidgetProvider:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onEnabled(android.content.Context) -> onEnabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle) -> onAppWidgetOptionsChanged
    void onDeleted(android.content.Context,int[]) -> onDeleted
    void onDisabled(android.content.Context) -> onDisabled
com.itheima.mobilesafe74.receiver.SmsReceiver -> com.itheima.mobilesafe74.receiver.SmsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobilesafe74.service.AddressService -> com.itheima.mobilesafe74.service.AddressService:
    android.telephony.TelephonyManager mTM -> a
    com.itheima.mobilesafe74.service.AddressService$MyPhoneStateListener mPhoneStateListener -> b
    android.view.WindowManager$LayoutParams mParams -> c
    android.view.View mViewToast -> d
    android.view.WindowManager mWM -> e
    java.lang.String mAddress -> f
    android.widget.TextView tv_toast -> g
    android.os.Handler mHandler -> h
    int[] mDrawableIds -> i
    int mScreenHeight -> j
    int mScreenWidth -> k
    com.itheima.mobilesafe74.service.AddressService$InnerOutCallReceiver mInnerOutCallReceiver -> l
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void showToast(java.lang.String) -> a
    void query(java.lang.String) -> b
    void onDestroy() -> onDestroy
    android.widget.TextView access$0(com.itheima.mobilesafe74.service.AddressService) -> a
    java.lang.String access$1(com.itheima.mobilesafe74.service.AddressService) -> b
    android.view.WindowManager access$2(com.itheima.mobilesafe74.service.AddressService) -> c
    android.view.View access$3(com.itheima.mobilesafe74.service.AddressService) -> d
    int access$4(com.itheima.mobilesafe74.service.AddressService) -> e
    int access$5(com.itheima.mobilesafe74.service.AddressService) -> f
    void access$6(com.itheima.mobilesafe74.service.AddressService,java.lang.String) -> a
    android.os.Handler access$7(com.itheima.mobilesafe74.service.AddressService) -> g
com.itheima.mobilesafe74.service.AddressService$1 -> com.itheima.mobilesafe74.service.a:
    com.itheima.mobilesafe74.service.AddressService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itheima.mobilesafe74.service.AddressService$2 -> com.itheima.mobilesafe74.service.b:
    int startX -> b
    int startY -> c
    com.itheima.mobilesafe74.service.AddressService this$0 -> a
    android.view.WindowManager$LayoutParams val$params -> d
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.itheima.mobilesafe74.service.AddressService$3 -> com.itheima.mobilesafe74.service.c:
    com.itheima.mobilesafe74.service.AddressService this$0 -> a
    java.lang.String val$incomingNumber -> b
    void run() -> run
com.itheima.mobilesafe74.service.AddressService$InnerOutCallReceiver -> com.itheima.mobilesafe74.service.d:
    com.itheima.mobilesafe74.service.AddressService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobilesafe74.service.AddressService$MyPhoneStateListener -> com.itheima.mobilesafe74.service.e:
    com.itheima.mobilesafe74.service.AddressService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.itheima.mobilesafe74.service.BlackNumberService -> com.itheima.mobilesafe74.service.BlackNumberService:
    com.itheima.mobilesafe74.service.BlackNumberService$InnerSmsReceiver mInnerSmsReceiver -> a
    com.itheima.mobilesafe74.db.dao.BlackNumberDao mDao -> b
    android.telephony.TelephonyManager mTM -> c
    com.itheima.mobilesafe74.service.BlackNumberService$MyPhoneStateListener mPhoneStateListener -> d
    com.itheima.mobilesafe74.service.BlackNumberService$MyContentObserver mContentObserver -> e
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void endCall(java.lang.String) -> a
    void onDestroy() -> onDestroy
    com.itheima.mobilesafe74.db.dao.BlackNumberDao access$0(com.itheima.mobilesafe74.service.BlackNumberService) -> a
com.itheima.mobilesafe74.service.BlackNumberService$InnerSmsReceiver -> com.itheima.mobilesafe74.service.f:
    com.itheima.mobilesafe74.service.BlackNumberService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobilesafe74.service.BlackNumberService$MyContentObserver -> com.itheima.mobilesafe74.service.g:
    java.lang.String phone -> b
    com.itheima.mobilesafe74.service.BlackNumberService this$0 -> a
    void onChange(boolean) -> onChange
com.itheima.mobilesafe74.service.BlackNumberService$MyPhoneStateListener -> com.itheima.mobilesafe74.service.h:
    com.itheima.mobilesafe74.service.BlackNumberService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.itheima.mobilesafe74.service.LocationService -> com.itheima.mobilesafe74.service.LocationService:
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
com.itheima.mobilesafe74.service.LocationService$MyLocationListener -> com.itheima.mobilesafe74.service.i:
    com.itheima.mobilesafe74.service.LocationService this$0 -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.itheima.mobilesafe74.service.LockScreenService -> com.itheima.mobilesafe74.service.LockScreenService:
    android.content.IntentFilter intentFilter -> a
    com.itheima.mobilesafe74.service.LockScreenService$InnerReceiver innerReceiver -> b
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
com.itheima.mobilesafe74.service.LockScreenService$InnerReceiver -> com.itheima.mobilesafe74.service.j:
    com.itheima.mobilesafe74.service.LockScreenService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobilesafe74.service.UpdateWidgetService -> com.itheima.mobilesafe74.service.UpdateWidgetService:
    java.util.Timer mTimer -> a
    com.itheima.mobilesafe74.service.UpdateWidgetService$InnerReceiver mInnerReceiver -> b
    void onCreate() -> onCreate
    void startTimer() -> c
    void cancelTimerTask() -> a
    void updateAppWidget() -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void access$0(com.itheima.mobilesafe74.service.UpdateWidgetService) -> a
com.itheima.mobilesafe74.service.UpdateWidgetService$1 -> com.itheima.mobilesafe74.service.k:
    com.itheima.mobilesafe74.service.UpdateWidgetService this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.service.UpdateWidgetService$InnerReceiver -> com.itheima.mobilesafe74.service.l:
    com.itheima.mobilesafe74.service.UpdateWidgetService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobilesafe74.service.WatchDogService -> com.itheima.mobilesafe74.service.WatchDogService:
    boolean isWatch -> a
    com.itheima.mobilesafe74.db.dao.AppLockDao mDao -> b
    java.util.List mPacknameList -> c
    com.itheima.mobilesafe74.service.WatchDogService$InnerReceiver mInnerReceiver -> d
    java.lang.String mSkipPackagename -> e
    com.itheima.mobilesafe74.service.WatchDogService$MyContentObserver mContentObserver -> f
    void onCreate() -> onCreate
    void watch() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    com.itheima.mobilesafe74.db.dao.AppLockDao access$0(com.itheima.mobilesafe74.service.WatchDogService) -> a
    void access$1(com.itheima.mobilesafe74.service.WatchDogService,java.util.List) -> a
    void access$2(com.itheima.mobilesafe74.service.WatchDogService,java.lang.String) -> a
    boolean access$3(com.itheima.mobilesafe74.service.WatchDogService) -> b
    java.util.List access$4(com.itheima.mobilesafe74.service.WatchDogService) -> c
    java.lang.String access$5(com.itheima.mobilesafe74.service.WatchDogService) -> d
com.itheima.mobilesafe74.service.WatchDogService$1 -> com.itheima.mobilesafe74.service.m:
    com.itheima.mobilesafe74.service.WatchDogService this$0 -> a
    void run() -> run
com.itheima.mobilesafe74.service.WatchDogService$InnerReceiver -> com.itheima.mobilesafe74.service.n:
    com.itheima.mobilesafe74.service.WatchDogService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itheima.mobilesafe74.service.WatchDogService$MyContentObserver -> com.itheima.mobilesafe74.service.o:
    com.itheima.mobilesafe74.service.WatchDogService this$0 -> a
    void onChange(boolean) -> onChange
    com.itheima.mobilesafe74.service.WatchDogService access$0(com.itheima.mobilesafe74.service.WatchDogService$MyContentObserver) -> a
com.itheima.mobilesafe74.service.WatchDogService$MyContentObserver$1 -> com.itheima.mobilesafe74.service.p:
    com.itheima.mobilesafe74.service.WatchDogService$MyContentObserver this$1 -> a
    void run() -> run
com.itheima.mobilesafe74.utils.Md5Util -> com.itheima.mobilesafe74.c.a:
    java.lang.String encoder(java.lang.String) -> a
com.itheima.mobilesafe74.utils.ServiceUtil -> com.itheima.mobilesafe74.c.b:
    boolean isRunning(android.content.Context,java.lang.String) -> a
com.itheima.mobilesafe74.utils.SpUtil -> com.itheima.mobilesafe74.c.c:
    android.content.SharedPreferences sp -> a
    void putBoolean(android.content.Context,java.lang.String,boolean) -> a
    boolean getBoolean(android.content.Context,java.lang.String,boolean) -> b
    void putString(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> b
    void putInt(android.content.Context,java.lang.String,int) -> a
    int getInt(android.content.Context,java.lang.String,int) -> b
    void remove(android.content.Context,java.lang.String) -> a
com.itheima.mobilesafe74.utils.StreamUtil -> com.itheima.mobilesafe74.c.d:
    java.lang.String streamToString(java.io.InputStream) -> a
com.itheima.mobilesafe74.utils.ToastUtil -> com.itheima.mobilesafe74.c.e:
    void show(android.content.Context,java.lang.String) -> a
com.itheima.mobilesafe74.view.FocusTextView -> com.itheima.mobilesafe74.view.FocusTextView:
    boolean isFocused() -> isFocused
com.itheima.mobilesafe74.view.SettingClickView -> com.itheima.mobilesafe74.view.SettingClickView:
    android.widget.TextView tv_des -> a
    android.widget.TextView tv_title -> b
    void setTitle(java.lang.String) -> setTitle
    void setDes(java.lang.String) -> setDes
com.itheima.mobilesafe74.view.SettingItemView -> com.itheima.mobilesafe74.view.SettingItemView:
    android.widget.CheckBox cb_box -> a
    android.widget.TextView tv_des -> b
    java.lang.String mDestitle -> c
    java.lang.String mDesoff -> d
    java.lang.String mDeson -> e
    void initAttrs(android.util.AttributeSet) -> a
    boolean isCheck() -> a
    void setCheck(boolean) -> setCheck
com.lidroid.xutils.HttpUtils -> com.b.a.a:
    com.lidroid.xutils.http.HttpCache sHttpCache -> a
    org.apache.http.impl.client.DefaultHttpClient httpClient -> b
    org.apache.http.protocol.HttpContext httpContext -> c
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> d
    java.lang.String responseTextCharset -> e
    long currentRequestExpiry -> f
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> g
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> a
com.lidroid.xutils.HttpUtils$1 -> com.b.a.b:
    com.lidroid.xutils.HttpUtils this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.b.a.c:
    com.lidroid.xutils.HttpUtils this$0 -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.cache.KeyExpiryMap -> com.b.a.a.a:
    java.lang.Long get(java.lang.Object) -> a
    java.lang.Long put(java.lang.Object,java.lang.Long) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Long remove(java.lang.Object) -> b
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruMemoryCache -> com.b.a.a.b:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> i
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object,long) -> a
    void trimToSize(int) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> c
    int safeSizeOf(java.lang.Object,java.lang.Object) -> b
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.lidroid.xutils.exception.BaseException -> com.b.a.b.a:
com.lidroid.xutils.exception.HttpException -> com.b.a.b.b:
    int exceptionCode -> a
com.lidroid.xutils.http.HttpCache -> com.b.a.c.a:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> a
    int cacheSize -> b
    long defaultExpiryTime -> c
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> d
    long getDefaultExpiryTime() -> a
    void put(java.lang.String,java.lang.String,long) -> a
    java.lang.String get(java.lang.String) -> a
    boolean isEnabled(java.lang.String) -> b
com.lidroid.xutils.http.HttpCache$1 -> com.b.a.c.b:
    com.lidroid.xutils.http.HttpCache this$0 -> a
    int sizeOf(java.lang.String,java.lang.String) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> a
com.lidroid.xutils.http.HttpHandler -> com.b.a.c.c:
    org.apache.http.impl.client.AbstractHttpClient client -> b
    org.apache.http.protocol.HttpContext context -> c
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> d
    java.lang.String requestUrl -> e
    java.lang.String requestMethod -> f
    org.apache.http.client.methods.HttpRequestBase request -> g
    boolean isUploading -> h
    com.lidroid.xutils.http.callback.RequestCallBack callback -> i
    int retriedCount -> j
    java.lang.String fileSavePath -> k
    boolean isDownloadingFile -> l
    boolean autoResume -> m
    boolean autoRename -> n
    java.lang.String charset -> o
    com.lidroid.xutils.http.HttpHandler$State state -> p
    long expiry -> q
    long lastUpdateTime -> r
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> s
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> a
    void setExpiry(long) -> a
    com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> a
    boolean updateProgress(long,long,boolean) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> c
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.b.a.c.d:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.b.a.c.e:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> a
    com.lidroid.xutils.http.HttpHandler$State STARTED -> b
    com.lidroid.xutils.http.HttpHandler$State LOADING -> c
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> d
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> e
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> f
    int value -> g
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> h
    com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.b.a.c.f:
    java.lang.String charset -> a
    java.util.List headers -> b
    java.util.List queryStringParams -> c
    org.apache.http.HttpEntity bodyEntity -> d
    java.util.List bodyParams -> e
    java.util.HashMap fileParams -> f
    com.lidroid.xutils.task.Priority priority -> g
    com.lidroid.xutils.task.Priority getPriority() -> a
    java.lang.String getCharset() -> b
    org.apache.http.HttpEntity getEntity() -> c
    java.util.List getQueryStringParams() -> d
    java.util.List getHeaders() -> e
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.b.a.c.g:
    boolean overwrite -> a
    org.apache.http.Header header -> b
com.lidroid.xutils.http.ResponseInfo -> com.b.a.c.h:
    org.apache.http.HttpResponse response -> j
    java.lang.Object result -> a
    boolean resultFormCache -> b
    java.util.Locale locale -> c
    int statusCode -> d
    org.apache.http.ProtocolVersion protocolVersion -> e
    java.lang.String reasonPhrase -> f
    long contentLength -> g
    org.apache.http.Header contentType -> h
    org.apache.http.Header contentEncoding -> i
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.b.a.c.a.a:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> a
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.b.a.c.a.b:
    java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> a
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.b.a.c.a.c:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> a
com.lidroid.xutils.http.callback.RequestCallBack -> com.b.a.c.a.d:
    java.lang.String requestUrl -> a
    int rate -> b
    int getRate() -> b
    void setRequestUrl(java.lang.String) -> a
    void onStart() -> a
    void onLoading(long,long,boolean) -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.b.a.c.a.e:
    boolean updateProgress(long,long,boolean) -> a
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.b.a.c.a.f:
    java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> a
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.b.a.c.b.a:
    javax.net.ssl.SSLContext sslContext -> a
    java.security.KeyStore trustStore -> b
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> c
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.b.a.c.b.b:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.b.a.c.b.c:
    org.apache.http.HttpEntity entity -> a
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> b
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> c
    java.nio.charset.Charset uriCharset -> d
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> a
    void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    void setURI(java.lang.String) -> a
    java.lang.String getMethod() -> getMethod
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.b.a.c.b.d:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> a
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> b
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> c
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> d
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> e
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> f
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> g
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> h
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> i
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> j
    java.lang.String value -> k
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> l
    java.lang.String toString() -> toString
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.b.a.c.b.e:
    java.util.HashSet exceptionWhiteList -> a
    java.util.HashSet exceptionBlackList -> b
    int maxRetries -> c
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.b.a.c.b.a.a:
    byte[] content -> a
    boolean dirty -> b
    java.lang.String charset -> c
    java.util.List params -> d
    void refreshContent() -> a
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.b.a.c.b.a.b:
    java.io.InputStream content -> a
    long uncompressedLength -> b
    long uploadedSize -> c
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> d
    java.io.InputStream decorate(java.io.InputStream) -> a
    java.io.InputStream getDecompressingStream() -> a
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.b.a.c.b.a.c:
    java.io.InputStream decorate(java.io.InputStream) -> a
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.UploadEntity -> com.b.a.c.b.a.d:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.b.a.c.b.b.a:
    java.lang.String name -> a
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> b
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> c
    java.lang.String getName() -> a
    com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> b
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> c
    void addField(java.lang.String,java.lang.String) -> a
    void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> a
    void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> b
    void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> c
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.b.a.c.b.b.b:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> h
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> i
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.io.OutputStream) -> a
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> a
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    java.util.List getBodyParts() -> a
    void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> a
    java.lang.String getBoundary() -> b
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> a
    void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
    long getTotalLength() -> c
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> d
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.b.a.c.b.b.c:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> a
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> b
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> c
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.b.a.c.b.b.d:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
com.lidroid.xutils.http.client.multipart.MinimalField -> com.b.a.c.b.b.e:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> a
    java.lang.String getBody() -> b
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.b.a.c.b.b.f:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> a
    com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.b.a.c.b.b.g:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> a
    char[] MULTIPART_CHARS -> b
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> c
    org.apache.http.Header contentType -> d
    long length -> e
    boolean dirty -> f
    java.lang.String boundary -> g
    java.nio.charset.Charset charset -> h
    java.lang.String multipartSubtype -> i
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String generateBoundary() -> a
    void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> a
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> a
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.b.a.c.b.b.h:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> a
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> b
    long totalLength -> c
    long pos -> d
    boolean doCallBack(boolean) -> a
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.b.a.c.b.b.a.a:
    java.lang.String mimeType -> b
    java.lang.String mediaType -> c
    java.lang.String subType -> d
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> a
    java.lang.String getMimeType() -> a
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.b.a.c.b.b.a.b:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.b.a.c.b.b.a.c:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.b.a.c.b.b.a.d:
    byte[] content -> b
    java.nio.charset.Charset charset -> c
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
com.lidroid.xutils.http.client.util.URIBuilder -> com.b.a.c.b.c.a:
    java.lang.String scheme -> a
    java.lang.String encodedSchemeSpecificPart -> b
    java.lang.String encodedAuthority -> c
    java.lang.String userInfo -> d
    java.lang.String encodedUserInfo -> e
    java.lang.String host -> f
    int port -> g
    java.lang.String path -> h
    java.lang.String encodedPath -> i
    java.lang.String encodedQuery -> j
    java.util.List queryParams -> k
    java.lang.String fragment -> l
    java.lang.String encodedFragment -> m
    void digestURI(java.net.URI) -> a
    java.util.List parseQuery(java.lang.String) -> a
    java.net.URI build(java.nio.charset.Charset) -> a
    java.lang.String buildString(java.nio.charset.Charset) -> b
    java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> b
    java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> a
    java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> c
    com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> a
    java.lang.String normalizePath(java.lang.String) -> b
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.b.a.c.b.c.b:
    char[] DELIM -> a
    java.util.BitSet UNRESERVED -> b
    java.util.BitSet PUNCT -> c
    java.util.BitSet USERINFO -> d
    java.util.BitSet PATHSAFE -> e
    java.util.BitSet FRAGMENT -> f
    java.util.BitSet RESERVED -> g
    java.util.BitSet URLENCODER -> h
    java.util.List parse(java.lang.String) -> a
    java.lang.String format(java.util.List,java.lang.String) -> a
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> a
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> a
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> a
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> d
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> b
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> c
com.lidroid.xutils.task.Node -> com.b.a.d.a:
    boolean valueAsT -> b
    com.lidroid.xutils.task.PriorityObject value -> c
    com.lidroid.xutils.task.Node next -> a
    com.lidroid.xutils.task.Priority getPriority() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
com.lidroid.xutils.task.Priority -> com.b.a.d.b:
    com.lidroid.xutils.task.Priority UI_TOP -> a
    com.lidroid.xutils.task.Priority UI_NORMAL -> b
    com.lidroid.xutils.task.Priority UI_LOW -> c
    com.lidroid.xutils.task.Priority DEFAULT -> d
    com.lidroid.xutils.task.Priority BG_TOP -> e
    com.lidroid.xutils.task.Priority BG_NORMAL -> f
    com.lidroid.xutils.task.Priority BG_LOW -> g
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> h
    com.lidroid.xutils.task.Priority[] values() -> values
    com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.b.a.d.c:
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> b
    java.util.concurrent.Executor sDefaultExecutor -> a
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> c
    java.util.concurrent.FutureTask mFuture -> d
    boolean mExecuteInvoked -> e
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> f
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> g
    com.lidroid.xutils.task.Priority priority -> h
    void setPriority(com.lidroid.xutils.task.Priority) -> a
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> c
    void onPreExecute() -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> b
    boolean isCancelled() -> c
    com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void publishProgress(java.lang.Object[]) -> d
    void finish(java.lang.Object) -> e
    void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> a
    java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> a
    java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> b
    void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> c
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.b.a.d.d:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> a
    java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.b.a.d.e:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> a
    void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.b.a.d.f:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.b.a.d.g:
    void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.b.a.d.h:
    java.lang.Object[] mParams -> b
com.lidroid.xutils.task.PriorityExecutor -> com.b.a.d.i:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> b
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> c
    void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.b.a.d.j:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.b.a.d.k:
    com.lidroid.xutils.task.Priority priority -> a
    java.lang.Object obj -> b
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.b.a.d.l:
    int capacity -> b
    java.util.concurrent.atomic.AtomicInteger count -> c
    com.lidroid.xutils.task.Node head -> a
    com.lidroid.xutils.task.Node last -> d
    java.util.concurrent.locks.ReentrantLock takeLock -> e
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.ReentrantLock putLock -> g
    java.util.concurrent.locks.Condition notFull -> h
    void signalNotEmpty() -> c
    void signalNotFull() -> d
    java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> a
    void _enqueue(com.lidroid.xutils.task.Node) -> b
    java.lang.Object _dequeue() -> e
    void fullyLock() -> a
    void fullyUnlock() -> b
    int size() -> size
    int remainingCapacity() -> remainingCapacity
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    boolean offer(java.lang.Object) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Iterator iterator() -> iterator
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.b.a.d.m:
    com.lidroid.xutils.task.Node current -> b
    com.lidroid.xutils.task.Node lastRet -> c
    java.lang.Object currentElement -> d
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> a
    boolean hasNext() -> hasNext
    com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> a
    java.lang.Object next() -> next
    void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.b.a.d.n:
    void run() -> run
com.lidroid.xutils.util.CharsetUtils -> com.b.a.e.a:
    java.util.List SUPPORT_CHARSET -> a
    java.lang.String toCharset(java.lang.String,java.lang.String,int) -> a
    java.lang.String getEncoding(java.lang.String,int) -> a
    boolean isCharset(java.lang.String,java.lang.String,int) -> b
com.lidroid.xutils.util.IOUtils -> com.b.a.e.b:
    void closeQuietly(java.io.Closeable) -> a
com.lidroid.xutils.util.LogUtils -> com.b.a.e.c:
    java.lang.String customTagPrefix -> a
    boolean allowD -> b
    boolean allowE -> c
    boolean allowI -> d
    boolean allowV -> e
    boolean allowW -> f
    boolean allowWtf -> g
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> h
    java.lang.String generateTag(java.lang.StackTraceElement) -> a
    void d(java.lang.String) -> a
    void e(java.lang.String) -> b
    void e(java.lang.String,java.lang.Throwable) -> a
    void w(java.lang.Throwable) -> a
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.b.a.e.d:
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void w(java.lang.String,java.lang.Throwable) -> a
com.lidroid.xutils.util.OtherUtils -> com.b.a.e.e:
    java.lang.String getUserAgent(android.content.Context) -> a
    boolean isSupportRange(org.apache.http.HttpResponse) -> a
    java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> b
    java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> a
    long sizeOfString(java.lang.String,java.lang.String) -> a
    java.lang.String getSubString(java.lang.String,int,int) -> a
    java.lang.StackTraceElement getCallerStackTraceElement() -> a
